name: online-theatre-lint

services:
  movies:
    build:
      context: ./src
      target: lint
    networks:
      - movies-network
    volumes:
      - 'movies-mypy-cache:/opt/app/.mypy_cache'
      - './src/.lint:/opt/app/.lint'
    command: [ 'sleep', 'infinity' ]
    develop:
      watch:
        - action: sync
          path: ./src/movies
          target: /opt/app/movies
        - action: rebuild
          path: ./src/commands
        - action: rebuild
          path: ./src/pyproject.toml
        - action: rebuild
          path: ./src/poetry.lock

  tests:
    build:
      context: ./tests
      target: lint
    networks:
      - movies-network
    volumes:
      - 'tests-mypy-cache:/opt/app/.mypy_cache'
      - './tests/.lint:/opt/app/.lint'
    command: [ 'sleep', 'infinity' ]
    develop:
      watch:
        - action: sync
          path: ./tests/tests
          target: /opt/app/tests
        - action: rebuild
          path: ./tests/commands
        - action: rebuild
          path: ./tests/pyproject.toml
        - action: rebuild
          path: ./tests/poetry.lock

  auth:
    build:
      context: ./compose/auth
      target: lint
    networks:
      - movies-network
    volumes:
      - 'auth-mypy-cache:/opt/app/.mypy_cache'
      - './compose/auth/.lint:/opt/app/.lint'
    command: [ 'sleep', 'infinity' ]
    develop:
      watch:
        - action: sync
          path: ./compose/auth/auth
          target: /opt/app/auth
        - action: sync
          path: ./compose/auth/scripts
          target: /opt/app/scripts
        - action: rebuild
          path: ./compose/auth/commands
        - action: rebuild
          path: ./compose/auth/pyproject.toml
        - action: rebuild
          path: ./compose/auth/poetry.lock

  etl:
    build:
      context: ./compose/etl
      target: lint
    networks:
      - movies-network
    volumes:
      - 'etl-mypy-cache:/opt/app/.mypy_cache'
      - './compose/etl/.lint:/opt/app/.lint'
    command: [ 'sleep', 'infinity' ]
    develop:
      watch:
        - action: sync
          path: ./compose/etl/etl
          target: /opt/app/etl
        - action: sync
          path: ./compose/etl/schema
          target: /opt/app/schema
        - action: rebuild
          path: ./compose/etl/commands
        - action: rebuild
          path: ./compose/etl/pyproject.toml
        - action: rebuild
          path: ./compose/etl/poetry.lock

  ugc-mongo:
    build:
      context: ./compose/ugc_mongo
      target: lint
    networks:
      - movies-network
    volumes:
      - 'ugc-mypy-cache:/opt/app/.mypy_cache'
      - './compose/ugc_mongo/.lint:/opt/app/.lint'
    command: [ 'sleep', 'infinity' ]
    develop:
      watch:
        - action: sync
          path: ./compose/ugc_mongo/ugc
          target: /opt/app/ugc
        - action: rebuild
          path: ./compose/ugc_mongo/commands
        - action: rebuild
          path: ./compose/ugc_mongo/pyproject.toml
        - action: rebuild
          path: ./compose/ugc_mongo/poetry.lock

  notifications-queue:
    build:
      context: ./compose/notifications/queue
      target: lint
    networks:
      - movies-network
    volumes:
      - 'notifications-queue-mypy-cache:/opt/app/.mypy_cache'
      - './compose/notifications/queue/.lint:/opt/app/.lint'
    command: [ 'sleep', 'infinity' ]
    develop:
      watch:
        - action: sync
          path: ./compose/notifications/queue/notifications_queue
          target: /opt/app/notifications_queue
        - action: rebuild
          path: ./compose/notifications/queue/commands
        - action: rebuild
          path: ./compose/notifications/queue/pyproject.toml
        - action: rebuild
          path: ./compose/notifications/queue/poetry.lock

  notification-service:
    build:
      context: ./compose/notifications/notification
      target: lint
    networks:
      - movies-network
    volumes:
      - 'notifications-notification-mypy-cache:/opt/app/.mypy_cache'
      - './compose/notifications/notification/.lint:/opt/app/.lint'
    command: [ 'sleep', 'infinity' ]
    develop:
      watch:
        - action: sync
          path: ./compose/notifications/notification/src
          target: /opt/app/src
        - action: rebuild
          path: ./compose/notifications/notification/commands
        - action: rebuild
          path: ./compose/notifications/notification/pyproject.toml
        - action: rebuild
          path: ./compose/notifications/notification/poetry.lock

  notifications-admin-panel-service:
    build:
      context: ./compose/notifications/admin_panel
      target: lint
    networks:
      - movies-network
    volumes:
      - 'notifications-admin-panel-mypy-cache:/opt/app/.mypy_cache'
      - './compose/notifications/admin_panel/.lint:/opt/app/.lint'
    command: [ 'sleep', 'infinity' ]
    develop:
      watch:
        - action: sync
          path: ./compose/notifications/admin_panel/admin_panel
          target: /opt/app/admin_panel
        - action: rebuild
          path: ./compose/notifications/admin_panel/commands
        - action: rebuild
          path: ./compose/notifications/admin_panel/pyproject.toml
        - action: rebuild
          path: ./compose/notifications/admin_panel/poetry.lock

networks:
  movies-network:

volumes:
  movies-mypy-cache:
  tests-mypy-cache:
  auth-mypy-cache:
  etl-mypy-cache:
  ugc-mypy-cache:
  notifications-queue-mypy-cache:
  notifications-notification-mypy-cache:
  notifications-admin-panel-mypy-cache:
