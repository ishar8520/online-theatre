name: CI

on:
  push:
    branches:
      - main

  pull_request:
    types:
      - opened
      - synchronize

jobs:
  lint:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        lint_command: [ 'ruff', 'mypy' ]

    env:
      lint_command: ${{ matrix.lint_command }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run lint command '${{ matrix.lint_command }}'
        run: ./run_lint.sh "$lint_command"

      - name: Upload lint results
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: lint-${{ matrix.lint_command }}
          path: |
            ./src/.lint/
            ./tests/.lint/
            ./compose/auth/.lint/
            ./compose/etl/.lint/
          include-hidden-files: true

  tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python_version: [ '3.12', '3.13' ]

    env:
      python_version: ${{ matrix.python_version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run tests
        run: PYTHON_VERSION="$python_version" ./run_tests.sh

  telegram:
    runs-on: ubuntu-latest
    needs: [ 'lint', 'tests' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate message file
        env:
          github_repository: ${{ github.repository }}
          github_actor: ${{ github.actor }}
          github_sha: ${{ github.sha }}
          pull_request_number: ${{ github.event.pull_request.number }}
          pull_request_title: ${{ github.event.pull_request.title }}
        run: |
          {
              author_name=$github_actor
              author_url=https://github.com/$author_name
              author_part="*Author*: [$author_name]($author_url)"
          
              repository_name=$github_repository
              repository_url=https://github.com/$repository_name
              echo "*Repository*: [$repository_name]($repository_url)"

              if [[ "$pull_request_number" ]]; then
                  pull_request_url=$repository_url/pull/$pull_request_number
          
                  echo "*Pull request*: [$pull_request_title]($pull_request_url)"
                  echo "$author_part"
              else
                  commit_sha=$github_sha
                  commit_url=https://github.com/$github_repository/commit/$commit_sha

                  echo "*Commit*: [$commit_sha]($commit_url)"
                  echo "$author_part"
          
                  echo
                  git log -n 1 --format=%B "$commit_sha"
              fi
          } >./.github/.message_file.md

      - name: Send Telegram notification
        uses: appleboy/telegram-action@master
        with:
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          to: ${{ secrets.TELEGRAM_CHANNEL_ID }}
          format: markdown
          message_file: ./.github/.message_file.md
