services:
  nginx:
    image: 'bitnami/nginx:1.27.3-debian-12-r0'
    depends_on:
      movies:
        condition: service_healthy
    ports:
      - '8000:8080'
    networks:
      - movies-network
    volumes:
      - './compose/nginx/movies.conf:/opt/bitnami/nginx/conf/server_blocks/movies.conf:ro'

  movies:
    build:
      context: ./src
    depends_on:
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    networks:
      - movies-network
    environment:
      - PROJECT_NAME=$PROJECT_NAME
      - GUNICORN_WORKERS
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ELASTIC_HOST=elasticsearch
      - ELASTIC_PORT=9200
    command: [ '/opt/app/commands/gunicorn.sh' ]
    healthcheck:
      test: [ 'CMD-SHELL', 'curl -s http://localhost:8000/api/openapi.json' ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

  redis:
    image: 'bitnami/redis:7.4.2-debian-12-r0'
    networks:
      - movies-network
    volumes:
      - 'redis-data:/bitnami/redis/data'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    command: [ '/opt/bitnami/scripts/redis/run.sh', '--maxmemory', '${REDIS_MAXMEMORY:-200mb}' ]
    healthcheck:
      test: [ 'CMD', '/bin/bash', '-c', '[[ $(redis-cli ping) == "PONG" ]]' ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

  elasticsearch:
    image: 'bitnami/elasticsearch:8.16.1-debian-12-r1'
    networks:
      - movies-network
    volumes:
      - 'elasticsearch-data:/bitnami/elasticsearch/data'
    environment:
      - ELASTICSEARCH_HEAP_SIZE=${ELASTICSEARCH_HEAP_SIZE:-200m}
    restart: unless-stopped
    healthcheck:
      test: [ 'CMD-SHELL', '/opt/bitnami/scripts/elasticsearch/healthcheck.sh' ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  etl:
    build:
      context: ./compose/etl
    depends_on:
      postgresql:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    networks:
      - movies-network
    volumes:
      - 'etl-data:/opt/app/data'
      - 'etl-logs:/opt/app/logs'
    environment:
      - POSTGRESQL_HOST=postgresql
      - POSTGRESQL_PORT=5432
      - POSTGRESQL_DATABASE=$POSTGRESQL_DATABASE
      - POSTGRESQL_USERNAME=$POSTGRESQL_USERNAME
      - POSTGRESQL_PASSWORD=$POSTGRESQL_PASSWORD
      - ELASTIC_HOST=elasticsearch
      - ELASTIC_PORT=9200
    restart: unless-stopped

  postgresql:
    image: 'bitnami/postgresql:17.2.0-debian-12-r5'
    networks:
      - movies-network
    volumes:
      - 'postgresql-data:/bitnami/postgresql'
      - './compose/postgresql/database_dump.sql:/docker-entrypoint-initdb.d/init.sql'
    environment:
      - POSTGRESQL_DATABASE=$POSTGRESQL_DATABASE
      - POSTGRESQL_USERNAME=$POSTGRESQL_USERNAME
      - POSTGRESQL_PASSWORD=$POSTGRESQL_PASSWORD
    restart: unless-stopped
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready --username=$POSTGRESQL_USERNAME --dbname=$POSTGRESQL_DATABASE' ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  auth-service:
    build:
      context: ./compose/auth
    depends_on:
      auth-postgresql:
        condition: service_healthy
      auth-redis:
        condition: service_healthy
    networks:
      - movies-network
    command: [ '/opt/app/commands/gunicorn.sh' ]
    restart: unless-stopped
    healthcheck:
      test: [ 'CMD-SHELL', 'curl -s http://localhost:8000/auth/api/openapi.json' ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

  auth-postgresql:
    image: 'bitnami/postgresql:17.2.0-debian-12-r5'
    networks:
      - movies-network
    volumes:
      - 'auth-postgresql-data:/bitnami/postgresql'
    environment:
      - POSTGRESQL_DATABASE=$AUTH_POSTGRESQL_DATABASE
      - POSTGRESQL_USERNAME=$AUTH_POSTGRESQL_USERNAME
      - POSTGRESQL_PASSWORD=$AUTH_POSTGRESQL_PASSWORD
    restart: unless-stopped
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready --username=$AUTH_POSTGRESQL_USERNAME --dbname=$AUTH_POSTGRESQL_DATABASE' ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  auth-redis:
    image: 'bitnami/redis:7.4.2-debian-12-r0'
    networks:
      - movies-network
    volumes:
      - 'auth-redis-data:/bitnami/redis/data'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    restart: unless-stopped
    command: [ '/opt/bitnami/scripts/redis/run.sh', '--maxmemory', '${AUTH_REDIS_MAXMEMORY:-200mb}' ]
    healthcheck:
      test: [ 'CMD', '/bin/bash', '-c', '[[ $(redis-cli ping) == "PONG" ]]' ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

networks:
  movies-network:

volumes:
  redis-data:
  elasticsearch-data:
  etl-data:
  etl-logs:
  postgresql-data:
  auth-postgresql-data:
  auth-redis-data:
